name: CI

on:
  push:
    branches: [ main, feat/**, fix/** ]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # nightly full run

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  # Reuse a single logical DB across tests (our harness truncates tables per test state)
  DATABASE_URL: postgres://aether:postgres@localhost:5432/aether_test
  POSTGRES_PASSWORD: postgres
  AETHER_TEST_SHARED_POOL: '1'
  AETHER_TEST_MAX_CONNS: '12'
  # Provide deterministic AWS context & disable metadata to avoid network stalls
  AWS_EC2_METADATA_DISABLED: 'true'
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: dummy
  AWS_SECRET_ACCESS_KEY: dummy

jobs:
  fast-tests:
    name: Fast Tests (PR / branch)
    if: ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      RUSTC_WRAPPER: sccache
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: aether
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd="pg_isready -U aether" --health-interval=5s --health-timeout=5s --health-retries=20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          components: clippy,rustfmt

      - name: Install sccache
        uses: taiki-e/install-action@v2
        with:
          tool: sccache

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' || github.event_name == 'schedule' }}

      - name: Fast test suite
        env:
          AETHER_FAST_TEST: '1'
        run: |
          cargo test -p control-plane --lib --all-features -- --nocapture
          cargo test -p control-plane --test sbom_manifest_enforcement -- --nocapture
          # (Optionally) add other crate smoke tests here

      - name: Clippy (warnings as errors)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: sccache stats
        run: sccache --show-stats || true

  full-tests:
    name: Full Tests (main / nightly / manual)
    needs: [fast-tests]
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      RUSTC_WRAPPER: sccache
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: aether
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd="pg_isready -U aether" --health-interval=5s --health-timeout=5s --health-retries=20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          components: clippy,rustfmt

      - name: Install sccache
        uses: taiki-e/install-action@v2
        with:
          tool: sccache

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Full workspace tests (all features)
        run: |
          cargo test --workspace --all-features -- --nocapture

      - name: Clippy (strict)
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Doc build
        run: cargo doc --no-deps --workspace

      - name: Publish test report summary
        if: always()
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "Fast mode: PR job; Full mode: main/nightly/manual." >> $GITHUB_STEP_SUMMARY
          echo "DB URL: $DATABASE_URL" >> $GITHUB_STEP_SUMMARY
