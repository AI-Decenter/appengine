[graph]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]

[bans]
multiple-versions = "deny"
multiple-versions-include-dev = false
wildcards = "deny"
highlight = "all"

# Avoid noise from well-known build/test-only trees; our runtime guard handles prod paths.
skip-tree = [
	# docker/testcontainers path (dev-only)
	{ name = "bollard" },
	{ name = "testcontainers" },
]

skip = [
	{ name = "event-listener", reason = "sqlx uses v2.x while async-broadcast pulls v5.x via kube-runtime" },
	{ name = "linux-raw-sys", reason = "which uses rustix 0.38 -> linux-raw-sys 0.4, while tempfile pulls rustix 1.x -> linux-raw-sys 0.11" },
	{ name = "rustix", reason = "see linux-raw-sys explanation" },
	{ name = "nom", reason = "sqlformat depends on nom 7 while jsonschema depends on nom 8" },
	{ name = "hashbrown", reason = "sqlx (via hashlink) uses 0.14 while aws-sdk-s3 (via lru) uses 0.15; unify when upstream updates" },
]

[licenses]
confidence-threshold = 0.93
allow = [
	"MIT",
	"Apache-2.0",
	"BSD-3-Clause",
	"BSD-2-Clause",
	"ISC",
	"Unicode-DFS-2016",
	"Unicode-3.0",
	"MPL-2.0",
	"Zlib",
]
exceptions = [
	# webpki-roots uses CDLA-Permissive-2.0 which we allow only for this crate
	{ allow = ["CDLA-Permissive-2.0"], crate = "webpki-roots" },
]

[sources]
unknown-registry = "warn"
unknown-git = "warn"
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
allow-git = []

[advisories]
unmaintained = "all"
# Temporarily ignore advisories until upstream deps update (tracked in Issue 11/security hardening)
ignore = [
	# instant unmaintained via backoff -> kube-runtime
	"RUSTSEC-2024-0384",
	# paste unmaintained via sqlx 0.7.x
	"RUSTSEC-2024-0436",
	# sqlx protocol truncation; requires >=0.8.1; we will bump post-review
	"RUSTSEC-2024-0363",
	# backoff unmaintained via kube/kube-runtime
	"RUSTSEC-2025-0012",
	# derivative unmaintained via kube/kube-runtime
	"RUSTSEC-2024-0388",
]
